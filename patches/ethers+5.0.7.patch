diff --git a/node_modules/ethers/dist/ethers.umd.js b/node_modules/ethers/dist/ethers.umd.js
index 286dac1..de6f8ec 100644
--- a/node_modules/ethers/dist/ethers.umd.js
+++ b/node_modules/ethers/dist/ethers.umd.js
@@ -1,3 +1,5 @@
+const networkConfig = require('../../../web/network.json');
+
 (function (global, factory) {
 	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
 	typeof define === 'function' && define.amd ? define(['exports'], factory) :
@@ -24534,28 +24536,30 @@
 	        return apiKey;
 	    };
 	    AlchemyProvider.getUrl = function (network, apiKey) {
+			const alchemyUrl = networkConfig[network.chainId].alchemyUrl
 	        var host = null;
-	        switch (network.name) {
-	            case "homestead":
-	                host = "eth-mainnet.alchemyapi.io/v2/";
-	                break;
-	            case "ropsten":
-	                host = "eth-ropsten.alchemyapi.io/v2/";
-	                break;
-	            case "rinkeby":
-	                host = "eth-rinkeby.alchemyapi.io/v2/";
-	                break;
-	            case "goerli":
-	                host = "eth-goerli.alchemyapi.io/v2/";
-	                break;
-	            case "kovan":
-	                host = "eth-kovan.alchemyapi.io/v2/";
-	                break;
-	            default:
-	                logger.throwArgumentError("unsupported network", "network", arguments[0]);
-	        }
+	        // switch (network.name) {
+	        //     case "homestead":
+	        //         host = "eth-mainnet.alchemyapi.io/v2/";
+	        //         break;
+	        //     case "ropsten":
+	        //         host = "eth-ropsten.alchemyapi.io/v2/";
+	        //         break;
+	        //     case "rinkeby":
+	        //         host = "eth-rinkeby.alchemyapi.io/v2/";
+	        //         break;
+	        //     case "goerli":
+	        //         host = "eth-goerli.alchemyapi.io/v2/";
+	        //         break;
+	        //     case "kovan":
+	        //         host = "eth-kovan.alchemyapi.io/v2/";
+	        //         break;
+	        //     default:
+	        //         logger.throwArgumentError("unsupported network", "network", arguments[0]);
+	        // }
 	        return {
-	            url: ("https:/" + "/" + host + apiKey),
+				// url: ("https:/" + "/" + host + apiKey),
+				url: (alchemyUrl),
 	            throttleCallback: function (attempt, url) {
 	                if (apiKey === defaultApiKey) {
 	                    formatter.showThrottleMessage();
